// Generated by CoffeeScript 1.9.2
(function() {
  'use strict';
  var app;

  app = angular.module('ShoppingCart', ['OrderService', 'ProtocolService', 'AthleteService', 'CompoundService', 'BTCService', 'PubNubService']);


  /*                      Controllers */

  app.controller('ShoppingCartController', [
    '$scope', '$rootScope', '$element', 'BTCrate', 'Athlete', 'Protocol', 'Compounds', 'Order', 'PubNub', function($scope, $rootScope, $element, BTCrate, Athlete, Protocol, Compounds, Order, PubNub) {
      $scope.BTCrate = BTCrate;
      window.ShoppingCart = $scope.order = Order.create();
      $scope.$on('PubNubService : Athlete Connected', function() {
        return window.ShoppingCart = $scope.order = Order.create();
      });
      $scope.Compounds = Compounds;
      $scope.$on('Context Switch', function(e, context) {
        return $scope.visibleShoppingCart = _.contains(['Search', 'Editor'], context);
      });
      $scope.$on('ShoppingCart : Add Item', function(e, id) {
        if ($scope.order.cart[id] == null) {
          return $scope.order.cart[id] = {
            qty: 1,
            protocol: Protocol(id)
          };
        } else {
          return $scope.order.cart[id].qty += 1;
        }
      });
      $scope.$watch('order.referral', function() {
        if (($scope.order.referral != null) && $scope.order.referral !== '') {
          return PubNub('OrderService : Verify Referral Code', $scope.order.referral);
        }
      });
      $scope.$on('OrderService : Referral Code Is Valid', function(e, data) {
        if (data === $scope.order.referral) {
          return $scope.$evalAsync(function() {
            return $scope.referralCodeValid = true;
          });
        }
      });
      $scope.$on('OrderService : Referral Code Is Invalid', function(e, data) {
        if (data === $scope.order.referral) {
          return $scope.$evalAsync(function() {
            return $scope.referralCodeValid = false;
          });
        }
      });
      $scope.increaseQty = function(i) {
        return $scope.order.cart[i].qty += 1;
      };
      $scope.decreaseQty = function(i) {
        if ($scope.order.cart[i].qty > 1) {
          return $scope.order.cart[i].qty -= 1;
        }
      };
      $scope.deleteItem = function(i) {
        return delete $scope.order.cart[i];
      };
      $scope.accessoryQty = function() {
        var qty;
        qty = 0;
        _.each($scope.order.cart, function(item) {
          return qty += item.qty * item.protocol.accessoriesQty;
        });
        $scope.order.accessoryQty = qty;
        return qty;
      };
      $scope.accessoryPriceUSD = function() {
        var price;
        if ($scope.accessoryQty() === 0) {
          return 0;
        }
        if ($scope.referralCodeValid === true) {
          return 0;
        }
        price = $scope.accessoryQty() * 0.2;
        price += 10;
        price += 3;
        return price;
      };
      $scope.grandTotal = function() {
        var total;
        total = 0;
        _.each($scope.order.cart, function(item) {
          return total += item.protocol.priceUSD * item.qty;
        });
        total += $scope.accessoryPriceUSD();
        return total;
      };
      $scope.orderReady = function() {
        if (_.isEmpty($scope.order.cart)) {
          return [false, 'Add A Protocol'];
        }
        if ($scope.order.name.length > 0 && $scope.order.address.length > 0 && $scope.order.city.length > 0 && $scope.order.state.length === 2 && $scope.order.zip.length >= 5) {
          return [true, 'Checkout'];
        } else {
          return [false, 'Address Incomplete'];
        }
      };
      return $scope.checkout = function() {
        if ($scope.orderReady()[0]) {
          $scope.order.grandTotal = $scope.grandTotal();
          $scope.order.accessoryQty = $scope.accessoryQty();
          $scope.order.place();
          window.ShoppingCart = $scope.order = Order.create();
          return $rootScope.$broadcast('Context Switch', 'Athlete Profile');
        }
      };
    }
  ]);


  /*                      Directives */

  app.directive('shoppingCart', function() {
    return {
      restrict: 'E',
      templateUrl: 'assets/templates/ShoppingCart.html',
      controller: 'ShoppingCartController',
      controllerAs: 'ShoppingCartCtrl',
      scope: true,
      replace: true
    };
  });

}).call(this);
